"use strict";(self.webpackChunktelestion_docs=self.webpackChunktelestion_docs||[]).push([[843],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return t?i.createElement(g,o(o({ref:n},u),{},{components:t})):i.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4966:function(e,n,t){t.d(n,{kN:function(){return l},rj:function(){return a},Ee:function(){return g},s3:function(){return o}});var i=t(7294);function a(e){var n=e.cols,t=void 0===n?2:n,a=e.children;return i.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat("+t+", 1fr)",columnGap:"1em"}},a)}var r=t(9960);function o(e){var n=e.children,t=e.to;return i.createElement(r.Z,{to:t,className:"block-link"},i.createElement("span",null,n," \xbb"),i.createElement("span",null,t))}var s=function(){return i.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},i.createElement("defs",null,i.createElement("style",null,".a{clip-path:url(#b);}"),i.createElement("clipPath",{id:"b"},i.createElement("rect",{width:24,height:24}))),i.createElement("g",{id:"a",className:"a"},i.createElement("path",{d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})))};function l(e){var n=e.children,t=e.file;return i.createElement("a",{className:"block-link",download:!0,href:t},i.createElement("span",null,i.createElement(s,null)," ",n))}var c=t(7462),u=t(3366),p=t(4996),d=t(6010),m=["src","invertible","center","alt"];function g(e){var n=e.src,t=e.invertible,a=void 0!==t&&t,o=e.center,s=void 0!==o&&o,l=e.alt,g=void 0===l?"":l,f=(0,u.Z)(e,m),h=n.startsWith("/static")?n.substr(7):n,v=(0,p.Z)(h);return i.createElement(i.Fragment,null,i.createElement(r.Z,{to:h,style:{display:"none"}},"Link to ",g),i.createElement("img",(0,c.Z)({src:v,className:(0,d.Z)(a&&"invertible",s&&"center"),alt:g},f)))}},4124:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var i=t(7462),a=t(3366),r=(t(7294),t(3905)),o=t(4966),s=["components"],l={title:"Adding configuration options",description:"Verticles work best when you can quickly adjust their parameters and re-use them. Learn how to make your Verticles configurable."},c=void 0,u={unversionedId:"application/tutorials/adding-configuration-options",id:"application/tutorials/adding-configuration-options",title:"Adding configuration options",description:"Verticles work best when you can quickly adjust their parameters and re-use them. Learn how to make your Verticles configurable.",source:"@site/docs/application/tutorials/202-adding-configuration-options.mdx",sourceDirName:"application/tutorials",slug:"/application/tutorials/adding-configuration-options",permalink:"/application/tutorials/adding-configuration-options",editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/application/tutorials/202-adding-configuration-options.mdx",tags:[],version:"current",sidebarPosition:202,frontMatter:{title:"Adding configuration options",description:"Verticles work best when you can quickly adjust their parameters and re-use them. Learn how to make your Verticles configurable."},sidebar:"tutorialSidebar",previous:{title:"Using JsonMessage for event bus messages",permalink:"/application/tutorials/using-jsonmessage"},next:{title:"Guides",permalink:"/application/guides"}},p=[{value:"What we&#39;ll build",id:"what-well-build",children:[],level:2},{value:"Step 1: Defining the <code>record Configuration</code> for the Verticle",id:"step-1-defining-the-record-configuration-for-the-verticle",children:[],level:2},{value:"Step 2: Adjusting the Verticle structure",id:"step-2-adjusting-the-verticle-structure",children:[],level:2},{value:"Step 3: Retrieving configuration values",id:"step-3-retrieving-configuration-values",children:[],level:2},{value:"Step 4: Adding default configuration parameters",id:"step-4-adding-default-configuration-parameters",children:[],level:2},{value:"Step 5: Adjusting the <code>main()</code> method",id:"step-5-adjusting-the-main-method",children:[],level:2},{value:"Next steps",id:"next-steps",children:[],level:2}],d={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"While it is already great to have a Verticle that does its job, the effort of\nmaking it configurable, and thus, reusable, is minimal."),(0,r.kt)("p",null,"Developing your Verticle in a re-usable way means that it'll take far less time\n(and maybe not even re-compilation/a new release) to adjust to changed mission\nparameters."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Prerequisites")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"To complete this tutorial, you should be familiar with writing basic Verticles\nand using the ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonMessage")," interface from the Telestion APIs."))),(0,r.kt)("h2",{id:"what-well-build"},"What we'll build"),(0,r.kt)(o.s3,{to:"/application/tutorials/using-jsonmessage/",mdxType:"Reference"},"Base Code"),(0,r.kt)("p",null,"Based on the code from the\n",(0,r.kt)("a",{parentName:"p",href:"/application/tutorials/using-jsonmessage/"},(0,r.kt)("inlineCode",{parentName:"a"},"JsonMessage")," tutorial"),", we'll add\nconfigurability to our ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageTransformer")," verticle."),(0,r.kt)("p",null,"After the tutorial, our Verticle will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title='MessageTransformer.java' {12-21,26-29,37-42,46,51-52,58-66}",title:"'MessageTransformer.java'","{12-21,26-29,37-42,46,51-52,58-66}":!0},'package de.wuespace.telestion.project.example;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport de.wuespace.telestion.api.config.Config;\nimport de.wuespace.telestion.api.message.JsonMessage;\nimport io.vertx.core.AbstractVerticle;\nimport io.vertx.core.DeploymentOptions;\nimport io.vertx.core.Vertx;\nimport io.vertx.core.json.JsonObject;\n\npublic class MessageTransformer extends AbstractVerticle {\n    private Configuration config;\n\n    @SuppressWarnings("unused")\n    public MessageTransformer() {\n        this(null);\n    }\n\n    public MessageTransformer(Configuration config) {\n        this.config = config;\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        var vertx = Vertx.vertx();\n        vertx.deployVerticle(MessageTransformer.class,\n                new DeploymentOptions().setConfig(\n                        new JsonObject()\n                                .put("multiplier", 6)\n                )\n        );\n\n        // [...]\n    }\n\n    @Override\n    public void start() throws Exception {\n        this.config = Config.get(\n                this.config, // "forced" configuration, typically null\n                new Configuration(), // default value\n                config(), // passed to Verticle\n                Configuration.class // the configuration class\n        );\n\n        var eb = getVertx().eventBus();\n\n        eb.consumer(this.config.inAddress(), event ->\n                JsonMessage.on(IntegerMessage.class, event,\n                        message ->\n                        {\n                            int received = message.value();\n                            var output = new IntegerMessage(received * this.config.multiplier());\n                            eb.publish(this.config.outAddress(), output.json());\n                        }\n                )\n        );\n    }\n\n    public record Configuration(\n            @JsonProperty String inAddress,\n            @JsonProperty String outAddress,\n            @JsonProperty int multiplier\n    ) implements JsonMessage {\n        public Configuration() {\n            this("input", "output", 2); // default values\n        }\n    }\n}\n')),(0,r.kt)("h2",{id:"step-1-defining-the-record-configuration-for-the-verticle"},"Step 1: Defining the ",(0,r.kt)("inlineCode",{parentName:"h2"},"record Configuration")," for the Verticle"),(0,r.kt)("p",null,"The Telestion APIs re-use the ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonMessage")," interface to deal with type safety\nin configuration options. The reason for this is basically the same as with the\nevent bus: Vert.x natively uses ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonObject")," instances. While in specific,\ndynamic use-cases, this is useful, we typically want our configuration to be\ntype safe, which is why we can use convenience functions that are very similar\nto the ",(0,r.kt)("inlineCode",{parentName:"p"},"JsonMessage")," APIs."),(0,r.kt)("p",null,"Since our Verticle is rather basic, there are only three parameters that we\ncould expose to be configurable:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"the event bus address we're listening to"),(0,r.kt)("li",{parentName:"ol"},"the event bus address we're publishing to"),(0,r.kt)("li",{parentName:"ol"},"the multiplier")),(0,r.kt)("p",null,"Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"record Configuration implements JsonMessage")," containing these fields as a\nmember of our ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageTransformer")," Verticle:"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"It has become a convention to make the configuration records members of their\nVerticle and name them ",(0,r.kt)("inlineCode",{parentName:"p"},"Configuration"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MessageTransformer.java"',title:'"MessageTransformer.java"'},"// [...]\npublic class MessageTransformer extends AbstractVerticle {\n    // [...]\n    public record Configuration(\n            @JsonProperty String inAddress,\n            @JsonProperty String outAddress,\n            @JsonProperty int multiplier\n    ) implements JsonMessage {\n    }\n}\n")),(0,r.kt)("p",null,"Now that we have to find a configuration record, let's take a look at how we can\napply it in our Verticle."),(0,r.kt)("h2",{id:"step-2-adjusting-the-verticle-structure"},"Step 2: Adjusting the Verticle structure"),(0,r.kt)("p",null,"To actually use our configuration, we need to make some slight adjustments to\nall code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title='MessageTransformer.java' {3-12}",title:"'MessageTransformer.java'","{3-12}":!0},'// [...]\npublic class MessageTransformer extends AbstractVerticle {\n    private Configuration config;\n\n    @SuppressWarnings("unused")\n    public MessageTransformer() {\n        this(null);\n    }\n\n    public MessageTransformer(Configuration config) {\n        this.config = config;\n    }\n\n    // [...]\n\n    public record Configuration(\n            @JsonProperty String inAddress,\n            @JsonProperty String outAddress,\n            @JsonProperty int multiplier\n    ) implements JsonMessage {\n    }\n}\n')),(0,r.kt)("p",null,"First, we need to add a ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," field that stores our configuration. We also\nneed two constructors: One that gets passed a ",(0,r.kt)("inlineCode",{parentName:"p"},"Configuration")," object, and\nanother that has no parameters."),(0,r.kt)("p",null,"With that, our Verticle is fully set up to handle our configuration objects.\nNext, let's take a look at how we can retrieve configuration values to actually\nuse them within our Verticle."),(0,r.kt)("h2",{id:"step-3-retrieving-configuration-values"},"Step 3: Retrieving configuration values"),(0,r.kt)("p",null,"We can use another one of Telestion's convenience methods to retrieve our\nconfiguration."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"Config.get()")," and pass our forced config, the configuration passed to the\nVerticle, and a reference to the configuration class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title='MessageTransformer.java' {2,9-13,17,22-23}",title:"'MessageTransformer.java'","{2,9-13,17,22-23}":!0},'[...]\nimport de.wuespace.telestion.api.config.Config;\n\npublic class MessageTransformer extends AbstractVerticle {\n    // [...]\n\n    @Override\n    public void start() throws Exception {\n        this.config = Config.get(\n                this.config, // "forced" configuration, typically null\n                config(), // passed to Verticle\n                Configuration.class // the configuration class\n        );\n\n        var eb = getVertx().eventBus();\n\n        eb.consumer(this.config.inAddress(), event ->\n                JsonMessage.on(IntegerMessage.class, event,\n                        message ->\n                        {\n                            int received = message.value();\n                            var output = new IntegerMessage(received * this.config.multiplier());\n                            eb.publish(this.config.outAddress(), output.json());\n                        }\n                )\n        );\n    }\n\n    // [...]\n}\n')),(0,r.kt)("p",null,"As you can see, we can now just access configuration options by using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"this.config")," field of our Verticle."),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),(0,r.kt)("inlineCode",{parentName:"h5"},"this.config")," vs ",(0,r.kt)("inlineCode",{parentName:"h5"},"this.config()"))),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Always retrieve configuration using ",(0,r.kt)("inlineCode",{parentName:"p"},"this.config"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"this.config()")," should only\nget passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"Config.get()"),' as it returns the "native" JsonObject (as part of\nthe Vert.x APIs) instead of the ',(0,r.kt)("inlineCode",{parentName:"p"},"Configuration")," instance!"))),(0,r.kt)("h2",{id:"step-4-adding-default-configuration-parameters"},"Step 4: Adding default configuration parameters"),(0,r.kt)("p",null,"Having every single configuration option for every single Verticle one deploys\ncan be quite cumbersome."),(0,r.kt)("p",null,"Therefore, it is good practice to define the default values for your\n",(0,r.kt)("inlineCode",{parentName:"p"},"Configuration")," record."),(0,r.kt)("p",null,"And a default constructor defining the default values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MessageTransformer.java" {9-11}',title:'"MessageTransformer.java"',"{9-11}":!0},'// [...]\npublic class MessageTransformer extends AbstractVerticle {\n    // [...]\n    public record Configuration(\n            @JsonProperty String inAddress,\n            @JsonProperty String outAddress,\n            @JsonProperty int multiplier\n    ) implements JsonMessage {\n        public Configuration() {\n            this("input", "output", 2); // default values\n        }\n    }\n}\n')),(0,r.kt)("p",null,"After that, all that you need to do is to add another parameter in the Telestion\nconvenience function."),(0,r.kt)("p",null,"Add your default configuration as the second parameter of the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.get()"),"\nfunction:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title='MessageTransformer.java' {9}",title:"'MessageTransformer.java'","{9}":!0},'// [...]\npublic class MessageTransformer extends AbstractVerticle {\n    // [...]\n\n    @Override\n    public void start() throws Exception {\n        this.config = Config.get(\n                this.config, // "forced" configuration, typically null\n                new Configuration(), // default value\n                config(), // passed to Verticle\n                Configuration.class // the configuration class\n        );\n\n        // [...]\n    }\n\n    // [...]\n}\n')),(0,r.kt)("h2",{id:"step-5-adjusting-the-main-method"},"Step 5: Adjusting the ",(0,r.kt)("inlineCode",{parentName:"h2"},"main()")," method"),(0,r.kt)("p",null,"To test what we've just written, we also need to adjust our main method."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"newDeploymentOptions().setConfig(jsonObject)")," to pass a configuration\nobject to the deployed verticle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title='MessageTransformer.java' {13-16}",title:"'MessageTransformer.java'","{13-16}":!0},'package de.wuespace.telestion.project.example;\n\n// [...]\nimport io.vertx.core.DeploymentOptions;\nimport io.vertx.core.json.JsonObject;\n\npublic class MessageTransformer extends AbstractVerticle {\n    // [...]\n\n    public static void main(String[] args) throws InterruptedException {\n        var vertx = Vertx.vertx();\n        vertx.deployVerticle(MessageTransformer.class,\n                new DeploymentOptions().setConfig(\n                        new JsonObject()\n                                .put("multiplier", 6)\n                )\n        );\n\n        // [...]\n    }\n\n    // [...]\n}\n')),(0,r.kt)("p",null,"That's it. When you now re-run the main method, you should see that we now get a\n",(0,r.kt)("inlineCode",{parentName:"p"},"value")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"18"),", i.e., ",(0,r.kt)("inlineCode",{parentName:"p"},"6 * 3"),"."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We're using ",(0,r.kt)("inlineCode",{parentName:"p"},"new JsonObject().put()")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"new Configuration()"),' since it\nwouldn\'t be possible to test our default values if we instantiated a "full"\n',(0,r.kt)("inlineCode",{parentName:"p"},"Configuration")," instance."))),(0,r.kt)("h2",{id:"next-steps"},"Next steps"),(0,r.kt)("p",null,"And that's already it. While you may, of course, need to know how to use other\nJava functionalities, this is all the Telestion-specific knowledge you need to\nwrite verticles and even whole extensions for the Telestion projects."))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktelestion_docs=self.webpackChunktelestion_docs||[]).push([[4906],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,f=u["".concat(s,".").concat(d)]||u[d]||p[d]||r;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4966:(e,t,n)=>{n.d(t,{kN:()=>s,rj:()=>o,Ee:()=>u,s3:()=>i});var a=n(7294);function o(e){let{cols:t=2,children:n}=e;return a.createElement("div",{style:{display:"grid",gridTemplateColumns:`repeat(${t}, 1fr)`,columnGap:"1em"}},n)}var r=n(9960);function i(e){let{children:t,to:n}=e;return a.createElement(r.Z,{to:n,className:"block-link"},a.createElement("span",null,t," \xbb"),a.createElement("span",null,n))}const l=()=>a.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},a.createElement("defs",null,a.createElement("style",null,".a{clip-path:url(#b);}"),a.createElement("clipPath",{id:"b"},a.createElement("rect",{width:24,height:24}))),a.createElement("g",{id:"a",className:"a"},a.createElement("path",{d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})));function s(e){let{children:t,file:n}=e;return a.createElement("a",{className:"block-link",download:!0,href:n},a.createElement("span",null,a.createElement(l,null)," ",t))}var c=n(7462),m=n(4996),p=n(6010);function u(e){let{src:t,invertible:n=!1,center:o=!1,alt:i="",...l}=e;const s=t.startsWith("/static")?t.substr(7):t,u=(0,m.Z)(s);return a.createElement(a.Fragment,null,a.createElement(r.Z,{to:s,style:{display:"none"}},"Link to ",i),a.createElement("img",(0,c.Z)({src:u,className:(0,p.Z)(n&&"invertible",o&&"center"),alt:i},l)))}},3432:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var a=n(7462),o=(n(7294),n(3905)),r=n(4966);const i={title:"Conventional Commits",description:"Conventional commits are a method of writing both machine-parsable and human-readable commit messages in a uniform way."},l=void 0,s={unversionedId:"internal/concepts/conventional-commits",id:"internal/concepts/conventional-commits",title:"Conventional Commits",description:"Conventional commits are a method of writing both machine-parsable and human-readable commit messages in a uniform way.",source:"@site/docs/internal/concepts/conventional-commits.mdx",sourceDirName:"internal/concepts",slug:"/internal/concepts/conventional-commits",permalink:"/internal/concepts/conventional-commits",draft:!1,editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/internal/concepts/conventional-commits.mdx",tags:[],version:"current",frontMatter:{title:"Conventional Commits",description:"Conventional commits are a method of writing both machine-parsable and human-readable commit messages in a uniform way."},sidebar:"internal",previous:{title:"Concepts",permalink:"/internal/concepts"},next:{title:"Error/Exception Messages (Code)",permalink:"/internal/concepts/error-messages"}},c={},m=[{value:"Examples",id:"examples",level:2},{value:"See also",id:"see-also",level:2}],p={toc:m};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Conventional commits are a method of writing git commit messages in a\nstandardized format that also enables automatic determination of the next\nrelease type in a semantic versioning system."),(0,o.kt)("p",null,"Conventional commits consist of five primary elements:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"type"),": The kind of the commit. The type can be one of a pre-configured number\nof elements, including (in this project) ",(0,o.kt)("inlineCode",{parentName:"li"},"feat")," for features, ",(0,o.kt)("inlineCode",{parentName:"li"},"fix")," for bug\nfixes, ",(0,o.kt)("inlineCode",{parentName:"li"},"docs")," for documentation updates, ",(0,o.kt)("inlineCode",{parentName:"li"},"chore")," for meta-stuff in the\nrepository (not updating the packages), and some more."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"scope")," (optional): The scope of the change, for example, the package name or\nsomething like ",(0,o.kt)("inlineCode",{parentName:"li"},"ci")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"description"),": a one-liner description of the type (feature, bug fix, or\nsomething else)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"body")," (optional): more detailed descriptions"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"footer")," (optional): key-value-pairs of extra meta information, for example,\nfixed GitHub issues")),(0,o.kt)("p",null,"All in all, the structure looks something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<type>[(optional scope)][!]: <description>\n\n[optional body]\n\n[optional footers]\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Since this doesn't look too intuitive, here are a couple of examples of actual\ncommit messages:"),(0,o.kt)("admonition",{title:"Example: A commit message for a bug fix introducing breaking changes",type:"tip"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"fix!: Fix parameter conversion in `updateParents()`\n\nBefore, it automatically converted strings to numbers in such a\nway that non-number inputs also got allowed. This is now changed.\n\nFixes: #8\nBREAKING CHANGE: Non-number inputs no lead to `updateParents()` to\nthrow\n"))),(0,o.kt)("admonition",{title:"Example: A commit message for a feature in the package pkg-1",type:"tip"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"feat(pkg-1): Constructor for JSON parameter\n\nadded constructor for a JSON string as the single parameter\nto `PackageOneClass`\n\nFixes: #22\nCo-Authored-By: Pablo Klaschka <contact@pabloklaschka.de>\n"))),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)(r.s3,{to:"/internal/references/conventional-commit-types",mdxType:"Reference"},"Commit Types Reference"),(0,o.kt)(r.s3,{to:"https://www.conventionalcommits.org/en/v1.0.0/",mdxType:"Reference"},"Conventional Commits Website/Specification"))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktelestion_docs=self.webpackChunktelestion_docs||[]).push([[6152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5335:(e,t,n)=>{n.d(t,{ZP:()=>i});var o=n(7462),r=(n(7294),n(3905));const a={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Deprecated: Vert.x-based Telestion",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Please note that the application and development of backend services using Vert.x in Telestion are deprecated. In the future, Telestion backend services will be developed using TypeScript and Deno, or through custom integrations with other languages."),(0,r.kt)("p",{parentName:"admonition"},"While there may be a compatibility layer for Vert.x services in the future, its availability is not guaranteed."),(0,r.kt)("p",{parentName:"admonition"},"For developing backend services, please refer to the (Work-in-Progress) documentation available here: ",(0,r.kt)("a",{parentName:"p",href:"https://pklaschka.github.io/telestion-docs-new/"},"https://pklaschka.github.io/telestion-docs-new/"),". Once the documentation is complete, it will be moved to the main Telestion documentation."),(0,r.kt)("p",{parentName:"admonition"},"Additional Information:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"NATS will be used as the distributed message bus/message broker for Telestion."),(0,r.kt)("li",{parentName:"ul"},"NATS' integrated authentication and authorization features will handle authentication and authorization for Ground Station operators, providing a single source of truth."),(0,r.kt)("li",{parentName:"ul"},"The event bus bridge will no longer be featured, and clients will be directly connected to the NATS server.")),(0,r.kt)("p",{parentName:"admonition"},"To establish a more technology-independent terminology, the Telestion project will modify the naming conventions as follows:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"The NATS server will be referred to as the message broker, message bus, or NATS server interchangeably."),(0,r.kt)("li",{parentName:"ul"},"Components that act as services without an attached user interface, will be referred to as services or backend services collectively."),(0,r.kt)("li",{parentName:"ul"},'Components that provide a user interface, formerly known as "clients," will be referred to as frontends. In most cases, the frontend will authenticate to the message broker as the user, while backend services will act on their own behalf.')),(0,r.kt)("p",{parentName:"admonition"},'These changes aim to provide clearer and more consistent terminology, accounting for the possibility of components having both service and frontend functionalities. Additionally, the use of "client" for frontends will be replaced to avoid potential confusion.'),(0,r.kt)("p",{parentName:"admonition"},"We recommend using the NATS client libraries recommended by NATS itself, unless there are no suitable options available for the targeted language/environment. We will not develop our own client libraries unless there is a lack of suitable options or significant advantages justify the effort."),(0,r.kt)("p",{parentName:"admonition"},"While Deno/TypeScript is the recommended choice for backend services, its use is not mandatory. Developers will be encouraged to use Deno/TypeScript where appropriate, but other options will still be supported for specific services. Comprehensive documentation and resources will be provided for writing and deploying Deno-based backend services in TypeScript."),(0,r.kt)("p",{parentName:"admonition"},"Please consider these changes and updates as you continue with Telestion development.")))}i.isMDXComponent=!0},4966:(e,t,n)=>{n.d(t,{kN:()=>s,rj:()=>r,Ee:()=>u,s3:()=>i});var o=n(7294);function r(e){let{cols:t=2,children:n}=e;return o.createElement("div",{style:{display:"grid",gridTemplateColumns:`repeat(${t}, 1fr)`,columnGap:"1em"}},n)}var a=n(9960);function i(e){let{children:t,to:n}=e;return o.createElement(a.Z,{to:n,className:"block-link"},o.createElement("span",null,t," \xbb"),o.createElement("span",null,n))}const l=()=>o.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},o.createElement("defs",null,o.createElement("style",null,".a{clip-path:url(#b);}"),o.createElement("clipPath",{id:"b"},o.createElement("rect",{width:24,height:24}))),o.createElement("g",{id:"a",className:"a"},o.createElement("path",{d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})));function s(e){let{children:t,file:n}=e;return o.createElement("a",{className:"block-link",download:!0,href:n},o.createElement("span",null,o.createElement(l,null)," ",t))}var c=n(7462),p=n(4996),d=n(6010);function u(e){let{src:t,invertible:n=!1,center:r=!1,alt:i="",...l}=e;const s=t.startsWith("/static")?t.substr(7):t,u=(0,p.Z)(s);return o.createElement(o.Fragment,null,o.createElement(a.Z,{to:s,style:{display:"none"}},"Link to ",i),o.createElement("img",(0,c.Z)({src:u,className:(0,d.Z)(n&&"invertible",r&&"center"),alt:i},l)))}n(5335)},7786:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(7462),r=(n(7294),n(3905)),a=n(4966);const i={title:"Electron",description:"Learn about Electron, the technology that allows the creation of native apps for Telestion Client Projects"},l=void 0,s={unversionedId:"client/concepts/electron",id:"client/concepts/electron",title:"Electron",description:"Learn about Electron, the technology that allows the creation of native apps for Telestion Client Projects",source:"@site/docs/client/concepts/120-electron.mdx",sourceDirName:"client/concepts",slug:"/client/concepts/electron",permalink:"/client/concepts/electron",draft:!1,editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/client/concepts/120-electron.mdx",tags:[],version:"current",sidebarPosition:120,frontMatter:{title:"Electron",description:"Learn about Electron, the technology that allows the creation of native apps for Telestion Client Projects"},sidebar:"client",previous:{title:"TypeScript",permalink:"/client/concepts/typescript"},next:{title:"React",permalink:"/client/concepts/react"}},c={},p=[{value:"Why as a native desktop application?",id:"why-as-a-native-desktop-application",level:2},{value:"See also",id:"see-also",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Electron is a framework for building desktop apps with web technologies. The\nTelestion Ecosystem uses it to enable the distribution of the Client as a\ndesktop application."),(0,r.kt)("h2",{id:"why-as-a-native-desktop-application"},"Why as a native desktop application?"),(0,r.kt)("p",null,"While you can distribute your Client to a web server so that your users can\naccess it with a web browser (and often, this is also useful), distributing as a\ndesktop application allows you to have a much more specific environment (like\nChromium in a specific version), which makes it easier to develop."),(0,r.kt)("p",null,"Furthermore, distribution as a desktop app allows you to add native features\n(like desktop notifications) to your Client without much effort."),(0,r.kt)("h2",{id:"see-also"},"See also"),(0,r.kt)(a.s3,{to:"https://www.electronjs.org/",mdxType:"Reference"},"Electron Project Website"),(0,r.kt)(a.s3,{to:"https://www.electronjs.org/docs/latest/",mdxType:"Reference"},"Electron Documentation"))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocusaurus_2_test=self.webpackChunkdocusaurus_2_test||[]).push([[953],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||s;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1993:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(7462),i=n(3366),s=(n(7294),n(3905)),a=["components"],o={title:"Writing a Verticle"},c=void 0,l={unversionedId:"backend/tutorials/writing-a-verticle",id:"backend/tutorials/writing-a-verticle",isDocsHomePage:!1,title:"Writing a Verticle",description:"In this tutorial, we write a simple verticle for the Telestion ecosystem.",source:"@site/docs/backend/tutorials/writing-a-verticle.mdx",sourceDirName:"backend/tutorials",slug:"/backend/tutorials/writing-a-verticle",permalink:"/telestion-docs/backend/tutorials/writing-a-verticle",editUrl:"https://github.com/wuespace/telestion-docs/docs/backend/tutorials/writing-a-verticle.mdx",version:"current",frontMatter:{title:"Writing a Verticle"},sidebar:"tutorialSidebar",previous:{title:"Backend Tutorials",permalink:"/telestion-docs/backend/tutorials/index"},next:{title:"npm",permalink:"/telestion-docs/client/concepts/npm"}},u=[{value:"What we&#39;ll build",id:"what-well-build",children:[]},{value:"Steps",id:"steps",children:[{value:"Step 1: Create a new verticle",id:"step-1-create-a-new-verticle",children:[]},{value:"Step 2: Listen to messages",id:"step-2-listen-to-messages",children:[]},{value:"Step 3: Republish Messages",id:"step-3-republish-messages",children:[]},{value:"Step 4: Add configuration options",id:"step-4-add-configuration-options",children:[]}]},{value:"Next steps",id:"next-steps",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In this tutorial, we write a simple verticle for the Telestion ecosystem."),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Prerequisites")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"To complete this tutorial, you should be familiar with standard Java programming\nstructures."))),(0,s.kt)("h2",{id:"what-well-build"},"What we'll build"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"title='MessageTransformer.java'",title:"'MessageTransformer.java'"},'package de.wuespace.telestion.project.daedalus2;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport de.wuespace.telestion.api.config.Config;\nimport de.wuespace.telestion.api.message.JsonMessage;\nimport de.wuespace.telestion.project.daedalus2.mavlink.SeedSystemT;\nimport de.wuespace.telestion.project.daedalus2.messages.*;\nimport io.vertx.core.AbstractVerticle;\nimport io.vertx.core.Promise;\n\npublic class MessageTransformer extends AbstractVerticle {\n private Configuration config;\n\n @SuppressWarnings("unused")\n public MessageTransformer() {\n  this(null);\n }\n\n public MessageTransformer(Configuration config) {\n  this.config = config;\n }\n\n @Override\n public void start(Promise<Void> startPromise) {\n  var eb = vertx.eventBus();\n\n  this.config = Config.get(\n    this.config,\n    config(),\n    Configuration.class\n  );\n\n  eb.consumer(this.config.inAddress(), raw -> JsonMessage.on(\n    SeedSystemT.class,\n    raw,\n    rawSystemT -> {\n      var beautifulMessage = new SystemT(rawSystemT);\n      eb.publish(\n        this.config.outAddress(),\n        beautifulMessage.json()\n      );\n    }\n  ));\n\n  startPromise.complete();\n }\n\n public record Configuration(\n   @JsonProperty\n   String inAddress,\n   @JsonProperty\n   String outAddress\n ) implements JsonMessage {\n  @SuppressWarnings("unused")\n  private Configuration() {\n   this(null, null);\n  }\n }\n}\n')),(0,s.kt)("h2",{id:"steps"},"Steps"),(0,s.kt)("h3",{id:"step-1-create-a-new-verticle"},"Step 1: Create a new verticle"),(0,s.kt)("h3",{id:"step-2-listen-to-messages"},"Step 2: Listen to messages"),(0,s.kt)("h3",{id:"step-3-republish-messages"},"Step 3: Republish Messages"),(0,s.kt)("h3",{id:"step-4-add-configuration-options"},"Step 4: Add configuration options"),(0,s.kt)("h2",{id:"next-steps"},"Next steps"))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktelestion_docs=self.webpackChunktelestion_docs||[]).push([[5416],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,d=p["".concat(l,".").concat(f)]||p[f]||u[f]||i;return n?r.createElement(d,o(o({ref:t},m),{},{components:n})):r.createElement(d,o({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4966:(e,t,n)=>{n.d(t,{kN:()=>l,rj:()=>a,Ee:()=>p,s3:()=>o});var r=n(7294);function a(e){let{cols:t=2,children:n}=e;return r.createElement("div",{style:{display:"grid",gridTemplateColumns:`repeat(${t}, 1fr)`,columnGap:"1em"}},n)}var i=n(9960);function o(e){let{children:t,to:n}=e;return r.createElement(i.Z,{to:n,className:"block-link"},r.createElement("span",null,t," \xbb"),r.createElement("span",null,n))}const s=()=>r.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},r.createElement("defs",null,r.createElement("style",null,".a{clip-path:url(#b);}"),r.createElement("clipPath",{id:"b"},r.createElement("rect",{width:24,height:24}))),r.createElement("g",{id:"a",className:"a"},r.createElement("path",{d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})));function l(e){let{children:t,file:n}=e;return r.createElement("a",{className:"block-link",download:!0,href:n},r.createElement("span",null,r.createElement(s,null)," ",t))}var c=n(7462),m=n(4996),u=n(6010);function p(e){let{src:t,invertible:n=!1,center:a=!1,alt:o="",...s}=e;const l=t.startsWith("/static")?t.substr(7):t,p=(0,m.Z)(l);return r.createElement(r.Fragment,null,r.createElement(i.Z,{to:l,style:{display:"none"}},"Link to ",o),r.createElement("img",(0,c.Z)({src:p,className:(0,u.Z)(n&&"invertible",a&&"center"),alt:o},s)))}},2287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=n(7462),a=(n(7294),n(3905)),i=n(4966);const o={title:"Maintainer's Tasks",description:"An overview of the tasks maintainers of the Telestion project modules have to fulfill"},s=void 0,l={unversionedId:"internal/references/maintainers-tasks",id:"internal/references/maintainers-tasks",title:"Maintainer's Tasks",description:"An overview of the tasks maintainers of the Telestion project modules have to fulfill",source:"@site/docs/internal/references/maintainers-tasks.mdx",sourceDirName:"internal/references",slug:"/internal/references/maintainers-tasks",permalink:"/internal/references/maintainers-tasks",draft:!1,editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/internal/references/maintainers-tasks.mdx",tags:[],version:"current",frontMatter:{title:"Maintainer's Tasks",description:"An overview of the tasks maintainers of the Telestion project modules have to fulfill"},sidebar:"internal",previous:{title:"Key Git Principles",permalink:"/internal/references/key-git-principles"},next:{title:"Unexpected Error Message Structure",permalink:"/internal/references/unexpected-error-message-structure"}},c={},m=[{value:"CLAs",id:"clas",level:2},{value:"Conventional Commits",id:"conventional-commits",level:2}],u={toc:m};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This document provides a reference of the key tasks maintainers within the\nTelestion ecosystem have to fulfill."),(0,a.kt)("h2",{id:"clas"},"CLAs"),(0,a.kt)("p",null,"Make sure that all contributions are by contributors who have signed the CLA.\nOtherwise, this project gets into a lot of legal trouble."),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"If a Pull Request doesn't contain a filled checkbox or other notice about the\ncontributor having signed the NDA, ",(0,a.kt)("strong",{parentName:"p"}," don't merge it!"),". If you suspect you\nmight have made a mistake in this regard, please talk to your team leader about\nit as soon as possible.")),(0,a.kt)("h2",{id:"conventional-commits"},"Conventional Commits"),(0,a.kt)("p",null,"Make sure that every change has a conventional commit associated with it."),(0,a.kt)("p",null,"Having a conventional commit for every change enables the project's tools to\nautomatically generate the release notes and the next released version. Thus, if\na branch has valid and correct conventional commit messages, you can go ahead\nand merge it by rebasing it onto the ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," branch."),(0,a.kt)("p",null,"Otherwise, you may have to squash and merge using a valid conventional commit\nmessage. In the end, the only important thing is that every change that's\nrelevant for the following kind of version (for example, a feature or a breaking\nchange) or the next version's release notes have a valid conventional commit for\nit in the main branch."),(0,a.kt)("admonition",{title:"Merge commits",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Merge commits appear not to get used (to their full extent). If, for merging a\nPull Request, you need a new conventional commit message, use Squash and Merge")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},'For some contributions, it just isn\'t practical to have one merge-able branch\nper change. For example, refactoring might, in the process, also fix a lot of\nold issues. In that case, you can squash and merge using the "biggest"\napplicable conventional commit (for example, ',(0,a.kt)("inlineCode",{parentName:"p"},"feat: Big Refactoring"),"), while\nputting ",(0,a.kt)("inlineCode",{parentName:"p"},"Closes: #issuenumber")," for every closed issue into the commit's footer.\nEven though fixing a bug would, initially, be a fix, the feature of a more\nwide-spread refactoring (with possibly one or two breaking changes) outweighs\nthat, and fixing a bug is just a side-effect.")),(0,a.kt)(i.s3,{to:"/internal/references/conventional-commit-types",mdxType:"Reference"},"More information regarding conventional commit types"))}p.isMDXComponent=!0}}]);
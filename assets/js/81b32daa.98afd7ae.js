"use strict";(self.webpackChunkdocusaurus_2_test=self.webpackChunkdocusaurus_2_test||[]).push([[906],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6054:function(e,t,n){n.d(t,{kN:function(){return l},rj:function(){return a},s3:function(){return o}});var r=n(7294);function a(e){var t=e.cols,n=void 0===t?2:t,a=e.children;return r.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat("+n+", 1fr)",columnGap:"1em"}},a)}var i=n(6742);function o(e){var t=e.children,n=e.to;return r.createElement(i.Z,{to:n,className:"block-link"},r.createElement("span",null,t," \xbb"),r.createElement("span",null,n))}var c=function(){return r.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},r.createElement("defs",null,r.createElement("style",null,".a{clip-path:url(#b);}"),r.createElement("clipPath",{id:"b"},r.createElement("rect",{width:24,height:24}))),r.createElement("g",{id:"a",className:"a"},r.createElement("path",{d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})))};function l(e){var t=e.children,n=e.file;return r.createElement("a",{className:"block-link",download:!0,href:n},r.createElement("span",null,r.createElement(c,null)," ",t))}},6742:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(3366),a=n(7294),i=n(3727),o=n(2263),c=n(3919),l=n(412),s=(0,a.createContext)({collectLink:function(){}}),u=n(4996),m=n(8780),p=["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"];var d=function(e){var t,n,d=e.isNavLink,f=e.to,v=e.href,h=e.activeClassName,g=e.isActive,k=e["data-noBrokenLinkCheck"],b=e.autoAddBaseUrl,y=void 0===b||b,N=(0,r.Z)(e,p),w=(0,o.Z)().siteConfig,C=w.trailingSlash,E=w.baseUrl,O=(0,u.C)().withBaseUrl,x=(0,a.useContext)(s),P=f||v,T=(0,c.Z)(P),j=null==P?void 0:P.replace("pathname://",""),S=void 0!==j?(n=j,y&&function(e){return e.startsWith("/")}(n)?O(n):n):void 0;S&&T&&(S=(0,m.applyTrailingSlash)(S,{trailingSlash:C,baseUrl:E}));var _,A=(0,a.useRef)(!1),I=d?i.OL:i.rU,R=l.Z.canUseIntersectionObserver;(0,a.useEffect)((function(){return!R&&T&&null!=S&&window.docusaurus.prefetch(S),function(){R&&_&&_.disconnect()}}),[S,R,T]);var M=null!==(t=null==S?void 0:S.startsWith("#"))&&void 0!==t&&t,B=!S||!T||M;return S&&T&&!M&&!k&&x.collectLink(S),B?a.createElement("a",Object.assign({href:S},P&&!T&&{target:"_blank",rel:"noopener noreferrer"},N)):a.createElement(I,Object.assign({},N,{onMouseEnter:function(){A.current||null==S||(window.docusaurus.preload(S),A.current=!0)},innerRef:function(e){var t,n;R&&e&&T&&(t=e,n=function(){null!=S&&window.docusaurus.prefetch(S)},(_=new window.IntersectionObserver((function(e){e.forEach((function(e){t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(_.unobserve(t),_.disconnect(),n())}))}))).observe(t))},to:S||""},d&&{isActive:g,activeClassName:h}))}},3919:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return o}});var r=n(2263),a=n(3919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,o=i.forcePrependBaseUrl,c=void 0!==o&&o,l=i.absolute,s=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(c)return t+n;var u=n.startsWith(t)?n:t+n.replace(/^\//,"");return s?e+u:u}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},8802:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=t.trailingSlash,r=t.baseUrl;if(e.startsWith("#"))return e;if(void 0===n)return e;var a,i=e.split(/[#?]/)[0],o="/"===i||i===r?i:(a=i,n?function(e){return e.endsWith("/")?e:e+"/"}(a):function(e){return e.endsWith("/")?e.slice(0,-1):e}(a));return e.replace(i,o)}},8780:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.uniq=t.applyTrailingSlash=void 0;var a=n(8802);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return r(a).default}});var i=n(9964);Object.defineProperty(t,"uniq",{enumerable:!0,get:function(){return r(i).default}})},9964:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return Array.from(new Set(e))}},6433:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return m},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(6054),c=["components"],l={title:"Conventional Commits",description:"REPLACE_WITH_DESCRIPTION"},s=void 0,u={unversionedId:"internal/concepts/conventional-commits",id:"internal/concepts/conventional-commits",isDocsHomePage:!1,title:"Conventional Commits",description:"REPLACE_WITH_DESCRIPTION",source:"@site/docs/internal/concepts/conventional-commits.mdx",sourceDirName:"internal/concepts",slug:"/internal/concepts/conventional-commits",permalink:"/telestion-docs/internal/concepts/conventional-commits",editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/internal/concepts/conventional-commits.mdx",version:"current",frontMatter:{title:"Conventional Commits",description:"REPLACE_WITH_DESCRIPTION"},sidebar:"tutorialSidebar",previous:{title:"telestion-client CLI",permalink:"/telestion-docs/client/concepts/tc-cli"},next:{title:"lerna",permalink:"/telestion-docs/internal/concepts/lerna"}},m=[{value:"Examples",id:"examples",children:[]},{value:"See also",id:"see-also",children:[]}],p={toc:m};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Conventional commits are a method of writing git commit messages in a\nstandardized format that also enables automatic determination of the next\nrelease type in a semantic versioning system."),(0,i.kt)("p",null,"Conventional commits consist of a few primary elements:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"type"),": The type of the commit. The type can be one of a pre-configured number\nof elements, including (in this project) ",(0,i.kt)("inlineCode",{parentName:"li"},"feat")," for features, ",(0,i.kt)("inlineCode",{parentName:"li"},"fix")," for bug\nfixes, ",(0,i.kt)("inlineCode",{parentName:"li"},"docs")," for documentation updates, ",(0,i.kt)("inlineCode",{parentName:"li"},"chore")," for meta-stuff in the repo\n(not updating the packages), and some more."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"scope")," (optional): The scope of the change, for example, the package name or\nsomething like ",(0,i.kt)("inlineCode",{parentName:"li"},"ci")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"description"),": a one-liner description of the type (feature, bug fix, or\nsomething else)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"body")," (optional): more detailed descriptions"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"footer")," (optional): key-value-pairs of extra meta information, for example,\nfixed GitHub issues")),(0,i.kt)("p",null,"All in all, the structure looks something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<type>[(optional scope)][!]: <description>\n\n[optional body]\n\n[optional footers]\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Since this doesn't look too intuitive, here are a few examples of actual commit\nmessages:"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Example: A commit message for a bug fix introducing breaking changes")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"fix!: Fixed parameter conversion in `updateParents()`\n\nBefore, it automatically converted strings to numbers in such a\nway that non-number inputs also got allowed. This is now changed.\n\nFixes: #8\nBREAKING CHANGE: Non-number inputs no lead to `updateParents()` to\nthrow\n")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Example: A commit message for a feature in the package pkg-1")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"feat(pkg-1): Constructor for JSON parameter\n\nadded constructor for a JSON string as the single parameter\nto `PackageOneClass`\n\nFixes: #22\nCo-Authored-By: Pablo Klaschka <contact@pabloklaschka.de>\n")))),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)(o.s3,{to:"../references/conventional-commit-types",mdxType:"Reference"},"Commit Types Reference"),(0,i.kt)(o.s3,{to:"https://www.conventionalcommits.org/en/v1.0.0/",mdxType:"Reference"},"Conventional Commits Website/Specification"))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktelestion_docs=self.webpackChunktelestion_docs||[]).push([[808],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5335:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(7462),i=(n(7294),n(3905));const r={toc:[]};function o(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Deprecated: Vert.x-based Telestion",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Please note that the application and development of backend services using Vert.x in Telestion are deprecated. In the future, Telestion backend services will be developed using TypeScript and Deno, or through custom integrations with other languages."),(0,i.kt)("p",{parentName:"admonition"},"While there may be a compatibility layer for Vert.x services in the future, its availability is not guaranteed."),(0,i.kt)("p",{parentName:"admonition"},"For developing backend services, please refer to the (Work-in-Progress) documentation available here: ",(0,i.kt)("a",{parentName:"p",href:"https://pklaschka.github.io/telestion-docs-new/"},"https://pklaschka.github.io/telestion-docs-new/"),". Once the documentation is complete, it will be moved to the main Telestion documentation."),(0,i.kt)("p",{parentName:"admonition"},"Additional Information:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"NATS will be used as the distributed message bus/message broker for Telestion."),(0,i.kt)("li",{parentName:"ul"},"NATS' integrated authentication and authorization features will handle authentication and authorization for Ground Station operators, providing a single source of truth."),(0,i.kt)("li",{parentName:"ul"},"The event bus bridge will no longer be featured, and clients will be directly connected to the NATS server.")),(0,i.kt)("p",{parentName:"admonition"},"To establish a more technology-independent terminology, the Telestion project will modify the naming conventions as follows:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"The NATS server will be referred to as the message broker, message bus, or NATS server interchangeably."),(0,i.kt)("li",{parentName:"ul"},"Components that act as services without an attached user interface, will be referred to as services or backend services collectively."),(0,i.kt)("li",{parentName:"ul"},'Components that provide a user interface, formerly known as "clients," will be referred to as frontends. In most cases, the frontend will authenticate to the message broker as the user, while backend services will act on their own behalf.')),(0,i.kt)("p",{parentName:"admonition"},'These changes aim to provide clearer and more consistent terminology, accounting for the possibility of components having both service and frontend functionalities. Additionally, the use of "client" for frontends will be replaced to avoid potential confusion.'),(0,i.kt)("p",{parentName:"admonition"},"We recommend using the NATS client libraries recommended by NATS itself, unless there are no suitable options available for the targeted language/environment. We will not develop our own client libraries unless there is a lack of suitable options or significant advantages justify the effort."),(0,i.kt)("p",{parentName:"admonition"},"While Deno/TypeScript is the recommended choice for backend services, its use is not mandatory. Developers will be encouraged to use Deno/TypeScript where appropriate, but other options will still be supported for specific services. Comprehensive documentation and resources will be provided for writing and deploying Deno-based backend services in TypeScript."),(0,i.kt)("p",{parentName:"admonition"},"Please consider these changes and updates as you continue with Telestion development.")))}o.isMDXComponent=!0},4966:(e,t,n)=>{n.d(t,{kN:()=>s,rj:()=>i,Ee:()=>m,s3:()=>o});var a=n(7294);function i(e){let{cols:t=2,children:n}=e;return a.createElement("div",{style:{display:"grid",gridTemplateColumns:`repeat(${t}, 1fr)`,columnGap:"1em"}},n)}var r=n(9960);function o(e){let{children:t,to:n}=e;return a.createElement(r.Z,{to:n,className:"block-link"},a.createElement("span",null,t," \xbb"),a.createElement("span",null,n))}const l=()=>a.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},a.createElement("defs",null,a.createElement("style",null,".a{clip-path:url(#b);}"),a.createElement("clipPath",{id:"b"},a.createElement("rect",{width:24,height:24}))),a.createElement("g",{id:"a",className:"a"},a.createElement("path",{d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})));function s(e){let{children:t,file:n}=e;return a.createElement("a",{className:"block-link",download:!0,href:n},a.createElement("span",null,a.createElement(l,null)," ",t))}var c=n(7462),p=n(4996),d=n(6010);function m(e){let{src:t,invertible:n=!1,center:i=!1,alt:o="",...l}=e;const s=t.startsWith("/static")?t.substr(7):t,m=(0,p.Z)(s);return a.createElement(a.Fragment,null,a.createElement(r.Z,{to:s,style:{display:"none"}},"Link to ",o),a.createElement("img",(0,c.Z)({src:m,className:(0,d.Z)(n&&"invertible",i&&"center"),alt:o},l)))}n(5335)},6259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905)),r=n(4966);const o={title:"Traits",description:"Understand the concept of traits in Java"},l=void 0,s={unversionedId:"application/concepts/traits",id:"application/concepts/traits",title:"Traits",description:"Understand the concept of traits in Java",source:"@site/docs/application/concepts/130-traits.mdx",sourceDirName:"application/concepts",slug:"/application/concepts/traits",permalink:"/application/concepts/traits",draft:!1,editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/application/concepts/130-traits.mdx",tags:[],version:"current",sidebarPosition:130,frontMatter:{title:"Traits",description:"Understand the concept of traits in Java"},sidebar:"application",previous:{title:"Event Loop",permalink:"/application/concepts/event-loop"},next:{title:"Records",permalink:"/application/concepts/records"}},c={},p=[{value:"Basic explanation",id:"basic-explanation",level:2},{value:"A basic logging trait",id:"a-basic-logging-trait",level:2},{value:"Conventions",id:"conventions",level:2},{value:"See also",id:"see-also",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,'Traits add new features to your Java class by providing default implementations\nyou can then "import".'),(0,i.kt)("h2",{id:"basic-explanation"},"Basic explanation"),(0,i.kt)("p",null,'Traits are essentially nothing more than Java interfaces. They provide default\nmethods to the implementing class or interface. You can "import" traits via the\n',(0,i.kt)("inlineCode",{parentName:"p"},"implements")," statement in your class definition."),(0,i.kt)("p",null,"The difference between traits and normal Java interfaces are essentially that a\ntrait adds features without forcing the implementing class to\noverwrite/implement the defined methods like normal interfaces would do."),(0,i.kt)("p",null,"After importing a trait you have access to the provided methods from the trait\nin your current scope."),(0,i.kt)("p",null,"Take a look at the following example for a better understanding:"),(0,i.kt)("h2",{id:"a-basic-logging-trait"},"A basic logging trait"),(0,i.kt)("p",null,"Imagine you have a class that wants to log a message to the console:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MyClass.java"',title:'"MyClass.java"'},"public class MyClass {\n    public void addNumbers() {\n        int sum = 1 + 2;\n        // that's tedious\n        // and where's the classname in front of the logging message?\n        System.out.printf(\"The sum is %d\", sum);\n    }\n}\n")),(0,i.kt)("p",null,"And you have a trait to support the requested feature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="WithLogging.java"',title:'"WithLogging.java"'},'public interface WithLogging {\n    default void log(String format, Object ...args) {\n        System.out.print(getClass().getName() + ": ");\n        System.out.printf(format, args);\n    }\n}\n')),(0,i.kt)("p",null,"You can now implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"WithLogging")," by using the default implemented method\n",(0,i.kt)("inlineCode",{parentName:"p"},"log"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MyClass.java" {1,4}',title:'"MyClass.java"',"{1,4}":!0},'public class MyClass implements WithLogging {\n    public void addNumbers() {\n        int sum = 1 + 2;\n        log("The sum is %d", sum);\n    }\n}\n')),(0,i.kt)("h2",{id:"conventions"},"Conventions"),(0,i.kt)("p",null,"The name of a trait typically contains the prefix ",(0,i.kt)("inlineCode",{parentName:"p"},"With")," and an action call\ndescribing what the trait provides to the implementing class or interface. For\nexample:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WithLogging")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WithEventBus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WithTiming")),(0,i.kt)("li",{parentName:"ul"},"etc.")),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)(r.s3,{to:"/application/tutorials/using-traits-in-verticles/",mdxType:"Reference"},"Using traits in Verticles"),(0,i.kt)(r.s3,{to:"/application/guides/writing-your-own-traits/",mdxType:"Reference"},"Writing your own traits"),(0,i.kt)(r.s3,{to:"https://javadoc.io/doc/de.wuespace.telestion/telestion-api/latest/de/wuespace/telestion/api/verticle/trait/package-summary.html",mdxType:"Reference"},"List of Telestion Core Verticle traits"))}m.isMDXComponent=!0}}]);